
#version 400 core
layout (location = 0) in vec2 position;
out vec2 texCoordOut;
out vec2 levelPositionOut;

uniform sampler2D tex_heightmap; 
uniform sampler2D tex_pixelmap; 

uniform int layerIndex;
uniform sampler2D tex_heightmap0;
uniform sampler2D tex_heightmap1;
uniform sampler2D tex_heightmap2;
uniform sampler2D tex_heightmap3;
uniform sampler2D tex_heightmap4;
uniform sampler2D tex_heightmap5;
uniform sampler2D tex_heightmap6;
uniform sampler2D tex_heightmap7;
uniform sampler2D tex_heightmap8;
uniform sampler2D tex_heightmap9;
uniform sampler2D tex_heightmap10;
uniform sampler2D tex_heightmap11;
uniform sampler2D tex_heightmap12;

uniform vec2 patchOrigin;
uniform vec2 levelScaleFactor;
uniform vec2 worldScaleFactor;
uniform vec2 worldOffset;
uniform mat4 modelView;
uniform vec2 hgtTexOffset;
uniform int n;

int earthRadius;
float CONST_PIDIV180;
float x;
float y;
float z;

void main()
{
	float texelValue;
	int positionX, positionY;

    vec2 levelPosition = position + patchOrigin;

	positionX = int(mod(levelPosition.x + hgtTexOffset.x, n )) + 1;
	positionY = int(mod(levelPosition.y + hgtTexOffset.y, n )) + 1;


    vec2 worldPosition = (levelPosition * levelScaleFactor * worldScaleFactor) + worldOffset;

	
    switch (layerIndex) {
	case 0:
		texelValue = texelFetch(tex_heightmap0, ivec2(positionX, positionY), 0).x;
		break;
	case 1:
		texelValue = texelFetch(tex_heightmap1, ivec2(positionX, positionY), 0).x;
		break;
	case 2:
		texelValue = texelFetch(tex_heightmap2, ivec2(positionX, positionY), 0).x;
		break;
	case 3:
		texelValue = texelFetch(tex_heightmap3, ivec2(positionX, positionY), 0).x;
		break;
	case 4:
		texelValue = texelFetch(tex_heightmap4, ivec2(positionX, positionY), 0).x;
		break;									 
	case 5:										 
		texelValue = texelFetch(tex_heightmap5, ivec2(positionX, positionY),  0).x;
		break;									 
	case 6:										 
		texelValue = texelFetch(tex_heightmap6, ivec2(positionX, positionY),  0).x;
		break;									 
	case 7:										 
		texelValue = texelFetch(tex_heightmap7, ivec2(positionX, positionY),  0).x;
		break;									 
	case 8:										 
		texelValue = texelFetch(tex_heightmap8, ivec2(positionX, positionY),  0).x;
		break;									 
	case 9:										 
		texelValue = texelFetch(tex_heightmap9, ivec2(positionX, positionY),  0).x;
		break;									 
	case 10:									 
		texelValue = texelFetch(tex_heightmap10, ivec2(positionX, positionY), 0).x;
		break;									 
	case 11:									 
		texelValue = texelFetch(tex_heightmap11, ivec2(positionX, positionY), 0).x;
		break;									 
	case 12:									 
		texelValue = texelFetch(tex_heightmap12, ivec2(positionX, positionY), 0).x;
		break;
	}
    
    earthRadius = 6378100;
    CONST_PIDIV180 = 0.01745329251;
    x = (earthRadius + texelValue) * sin(worldPosition.x * CONST_PIDIV180) * cos(worldPosition.y * CONST_PIDIV180);
    y = (earthRadius + texelValue) * sin(worldPosition.y * CONST_PIDIV180);
    z = (earthRadius + texelValue) * cos(worldPosition.x * CONST_PIDIV180) * cos(worldPosition.y * CONST_PIDIV180);


    //float moduloX = mod(levelPosition.x + texOffset.x, n - 1);
    //float moduloY = mod(levelPosition.y + texOffset.y, n - 1);
    //texCoordOut = vec2(moduloX, moduloY);
    
    levelPositionOut = levelPosition;
    gl_Position = modelView*vec4(x, y, z, 1.0);    
}
